// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package activity_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommonResp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonResp) Reset()         { *m = CommonResp{} }
func (m *CommonResp) String() string { return proto.CompactTextString(m) }
func (*CommonResp) ProtoMessage()    {}
func (*CommonResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

func (m *CommonResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonResp.Unmarshal(m, b)
}
func (m *CommonResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonResp.Marshal(b, m, deterministic)
}
func (m *CommonResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonResp.Merge(m, src)
}
func (m *CommonResp) XXX_Size() int {
	return xxx_messageInfo_CommonResp.Size(m)
}
func (m *CommonResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonResp.DiscardUnknown(m)
}

var xxx_messageInfo_CommonResp proto.InternalMessageInfo

func (m *CommonResp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CommonResp) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type IntWrap struct {
	Val                  int32    `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IntWrap) Reset()         { *m = IntWrap{} }
func (m *IntWrap) String() string { return proto.CompactTextString(m) }
func (*IntWrap) ProtoMessage()    {}
func (*IntWrap) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{1}
}

func (m *IntWrap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntWrap.Unmarshal(m, b)
}
func (m *IntWrap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntWrap.Marshal(b, m, deterministic)
}
func (m *IntWrap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntWrap.Merge(m, src)
}
func (m *IntWrap) XXX_Size() int {
	return xxx_messageInfo_IntWrap.Size(m)
}
func (m *IntWrap) XXX_DiscardUnknown() {
	xxx_messageInfo_IntWrap.DiscardUnknown(m)
}

var xxx_messageInfo_IntWrap proto.InternalMessageInfo

func (m *IntWrap) GetVal() int32 {
	if m != nil {
		return m.Val
	}
	return 0
}

func init() {
	proto.RegisterType((*CommonResp)(nil), "activity_pb.CommonResp")
	proto.RegisterType((*IntWrap)(nil), "activity_pb.IntWrap")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_555bd8c177793206) }

var fileDescriptor_555bd8c177793206 = []byte{
	// 119 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xce, 0xcf, 0xcd,
	0xcd, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4e, 0x4c, 0x2e, 0xc9, 0x2c, 0xcb,
	0x2c, 0xa9, 0x8c, 0x2f, 0x48, 0x52, 0x32, 0xe2, 0xe2, 0x72, 0x06, 0x4b, 0x06, 0xa5, 0x16, 0x17,
	0x08, 0x09, 0x71, 0xb1, 0x24, 0xe7, 0xa7, 0xa4, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x06, 0x81,
	0xd9, 0x42, 0x02, 0x5c, 0xcc, 0xb9, 0xc5, 0xe9, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x20,
	0xa6, 0x92, 0x34, 0x17, 0xbb, 0x67, 0x5e, 0x49, 0x78, 0x51, 0x62, 0x01, 0x48, 0xb2, 0x2c, 0x31,
	0x07, 0xaa, 0x1e, 0xc4, 0x4c, 0x62, 0x03, 0x5b, 0x62, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x7a,
	0x72, 0x08, 0xb5, 0x74, 0x00, 0x00, 0x00,
}
