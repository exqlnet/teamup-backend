consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
swagger: '2.0'
info:
  description: 'Teamup backend API documentation'
  title: Teamup backend API documentation
  contact:
    email: exqlnet@gmail.com
  license:
    name: MIT
    url: 'http://opensource.org/licenses/MIT'
  version: 1.0.0
basePath: /api/v1
paths:
  /activity:
    post:
      tags:
        - activity
      summary: 发布活动
      operationId: createActivity
      parameters:
        - description: 活动
          name: activity
          in: body
          required: true
          schema:
            type: object
            properties:
              activity_name:
                type: string
              introduction:
                type: string
              roles:
                type: array
                items:
                  type: string
                  description: 角色名
              illustration:
                type: string
                description: 插图
              authority_code:
                type: integer
                description: "授权方式（1开放，2仅邀请）"
              StartTime:
                type: integer
                description: 开始时间戳
              end_time:
                type: integer
                description: 结束时间戳
              processes:
                type: array
                items:
                  type: object
                  properties:
                    process_name:
                      type: string
                    start_time:
                      type: integer
                    tasks:
                      type: array
                      items:
                        type: object
                        properties:
                          task_name:
                            type: string
                            description: 任务名
                          role:
                            type: string
                            description: 属于什么角色（如果不属于任何角色可以不填或者设置为 - ）



        - description: 认证（token格式：Bearer <token>）
          type: string
          name: Authorization
          in: header
      responses:
        '200':
          $ref: '#/responses/activityCreateResp'
        '400':
          $ref: '#/responses/badReq'
        '401':
          $ref: '#/responses/unauthorized'
  /user/info:
    get:
      tags:
        - user
      summary: 获取用户信息
      operationId: getUserInfo
      responses:
        '200':
          $ref: '#/responses/userInfoResp'
        '400':
          $ref: '#/responses/badReq'
        '401':
          $ref: '#/responses/unauthorized'
  /user/login:
    post:
      tags:
        - user
      summary: 用微信授权码登陆
      operationId: login
      parameters:
        - type: string
          description: 微信授权码
          name: code
          in: path
          required: true
      responses:
        '200':
          $ref: '#/responses/userLoginResp'
        '400':
          $ref: '#/responses/badReq'
definitions:
  AuthToken:
    type: object
    properties:
      token:
        description: JWT 认证
        type: string
        x-go-name: Token
    x-go-package: teamup/api/swagger
  UserInfo:
    type: object
    properties:
      avatar:
        description: 头像
        type: string
        x-go-name: Avatar
      user_id:
        description: 用户ID
        type: integer
        format: int32
        x-go-name: UserID
      username:
        description: 用户名
        type: string
        x-go-name: Username
    x-go-package: teamup/api/swagger

  Activity:
    description: 活动
    type: object
    properties:
      activity_id:
        type: integer
        format: int32
      activity_name:
        type: string
      introduction:
        type: string
      creator_id:
        description: 创建者用户ID
        type: string
      regulation:
        type: string
        description: 活动规则
      roles:
        type: array
        description: 活动角色
        items:
          type: string
          description: 角色名
      authority:
        type: string
      illustration:
        type: string
      current_process:
        type: string
        description: 现在到了哪个流程
      status:
        type: string
        description: 当前进行状态
      processes:
        type: array
        description: 流程列表
        items:
          $ref: '#/definitions/ActivityProcess'
  ActivityProcess:
    description: 活动流程
    type: object
    properties:
      process_id:
        type: string
      process_name:
        type: string
      start_time:
        type: integer
        format: int64
        description: 开始时间(unix)
      tasks:
        $ref: '#/definitions/ActivityTask'
  ActivityTask:
    description: 活动流程中的任务
    type: object
    properties:
      task_name:
        type: string
      task_id:
        type: integer
      role:
        type: string
        description: 该任务属于哪个角色

responses:
  badReq:
    description: Error Bad Request
    schema:
      type: object
      properties:
        code:
          description: HTTP status code 400 - Status Bad Request
          type: integer
          format: int64
          x-go-name: Code
        message:
          description: Detailed error message
          type: string
          x-go-name: Message
  bool:
    description: Boolean response
    schema:
      type: object
      properties:
        code:
          description: HTTP Status Code 200
          type: integer
          format: int64
          x-go-name: Code
        data:
          description: Boolean true/false
          type: boolean
          x-go-name: Data
  conflict:
    description: Error Conflict
    schema:
      type: object
      properties:
        code:
          description: HTTP status code 409 - Conflict
          type: integer
          format: int64
          x-go-name: Code
        message:
          description: Detailed error message
          type: string
          x-go-name: Message
  forbidden:
    description: Error Forbidden
    schema:
      type: object
      properties:
        code:
          description: HTTP status code 403 - Forbidden
          type: integer
          format: int64
          x-go-name: Code
        message:
          description: Detailed error message
          type: string
          x-go-name: Message
  internal:
    description: Error Interval Server
    schema:
      type: object
      properties:
        code:
          description: HTTP status code 500 - Internal server error
          type: integer
          format: int64
          x-go-name: Code
        message:
          description: Detailed error message
          type: string
          x-go-name: Message
  notFound:
    description: Error Not Found
    schema:
      type: object
      properties:
        code:
          description: HTTP status code 404 - Not Found
          type: integer
          format: int64
          x-go-name: Code
        message:
          description: Detailed error message
          type: string
          x-go-name: Message
  ok:
    description: Success response
    schema:
      type: object
      properties:
        code:
          description: HTTP Status Code 200
          type: integer
          format: int64
          x-go-name: Code
  unauthorized:
    description: Error unauthorized
    schema:
      type: object
      properties:
        code:
          description: HTTP status code 401 - Forbidden
          type: integer
          format: int64
          x-go-name: Code
        message:
          description: Detailed error message
          type: string
          x-go-name: Message
  userInfoResp:
    description: 返回的用户信息
    schema:
      type: object
      properties:
        code:
          description: err code
          type: integer
          format: int32
          x-go-name: Code
        data:
          $ref: '#/definitions/UserInfo'
  userLoginResp:
    description: 用户登陆
    schema:
      type: object
      properties:
        code:
          type: integer
          format: int32
          x-go-name: Code
        data:
          $ref: '#/definitions/AuthToken'
  activityCreateResp:
    description: 活动创建响应
    schema:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        data:
          $ref: '#/definitions/Activity'
securityDefinitions:
  bearer:
    type: apiKey
    name: Authorization
    in: header
